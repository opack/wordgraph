- Nettoyage
	- Nettoyer l'atlas pour ne garder que les images utiles
	- Nettoyer le code pour supprimer les anciennes classes du graphe
- Gérer une grille de lettres au lieu d'un vrai graphe
	- Layout :
		. Prévoir une grille de 5 x 5 lettres
		- Prévoir un bouton "Mélanger"
	. Puzzle properties : possibilité de définir dans quelles cases apparaît initialement chaque lettre avec un formalisme simple
		comme par exemple :
			puzzle.line0 = AZERT
			puzzle.line1 = YUIOP
			puzzle.line2 = _QSDF
			puzzle.line3 = GHJ__
			puzzle.line4 = KLM_W
	. PuzzleScren :
		. Suppression du graphe (Graph, GraphNodes, GraphLink, GMLParser...)
		. Création dynamique du graphe logique à partir des solutions. Ce graphe permettra de savoir quelle lettre est connectée à quelle lettre,
		quel lien a déjà été utilisé etc...
		. Dessin dynamique des liens (obligatoire suite à la possiblité de mélanger)			
- Mieux gérer le fullscreen et l'aspect ratio : http://stackoverflow.com/questions/9899301/fullscreen-resolution-on-android-for-libgdx-games
- Supprimer l'écran des jokers les mettre les mettre dans le même panneau que les bonus
	-> prévoir une séparation dans ce panneau avec un sous-titre pour les bonus et les jokers
- Pour les effets visuels et les obstacles, créer un objet AnimatedSprite qui est un objet Scene2d
- Gestion des résolutions :
	- Faire plusieurs assets pour plusieurs tailles
	- Dans Assets.loadSkins, charger la skin correspondant à la taille de l'écran http://javamilf.blogspot.fr/2013/07/libgdx-android-no-stretching-at-any.html
- Alléger la skin pour mettre uniquement les éléments nécessaires
- Utiliser l'AssetManager au lieu de la classe Assets https://github.com/libgdx/libgdx/wiki/Asset-manager

Notes
- Génération dynamique de font : https://github.com/libgdx/libgdx/wiki/Gdx-freetype
- Génération de 9-patches dans plusieurs résolutions : http://android-ui-utils.googlecode.com/hg/asset-studio/dist/nine-patches.html