- Au lieu de modifier l'image de la lettre quand elle est sélectionnée dans un mot et mise en valeur
par un joker, la mettre en valeur différemment pour que le joueur voit bien toujours si ces lettres sont
connectées à la dernière lettre jouée, et donc sélectionnable.
	-> Par exemple : chenillard jaune autour de la lettre quand elle est sélectionnée et vert (en plus) quand elle
	est proposée par un joker
- Nettoyage
	- Nettoyer l'atlas pour ne garder que les images utiles
	- Nettoyer les listeners du graphe (en particulier les obstacles) et s'assurer
	que les méthodes sont utiles et correctement utilisées

- Mieux gérer le fullscreen et l'aspect ratio : http://stackoverflow.com/questions/9899301/fullscreen-resolution-on-android-for-libgdx-games
- Supprimer l'écran des jokers les mettre les mettre dans le même panneau que les bonus
	-> prévoir une séparation dans ce panneau avec un sous-titre pour les bonus et les jokers
- Pour les effets visuels et les obstacles, créer un objet AnimatedSprite qui est un objet Scene2d
- Gestion des résolutions :
	- Faire plusieurs assets pour plusieurs tailles
	- Dans Assets.loadSkins, charger la skin correspondant à la taille de l'écran http://javamilf.blogspot.fr/2013/07/libgdx-android-no-stretching-at-any.html
- Alléger la skin pour mettre uniquement les éléments nécessaires
- Utiliser l'AssetManager au lieu de la classe Assets https://github.com/libgdx/libgdx/wiki/Asset-manager

Notes
- Génération dynamique de font : https://github.com/libgdx/libgdx/wiki/Gdx-freetype
- Génération de 9-patches dans plusieurs résolutions : http://android-ui-utils.googlecode.com/hg/asset-studio/dist/nine-patches.html